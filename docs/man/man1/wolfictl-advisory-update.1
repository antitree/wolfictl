.TH "WOLFICTL\-ADVISORY\-UPDATE" "1" "" "Auto generated by spf13/cobra" "" 
.nh
.ad l


.SH NAME
.PP
wolfictl\-advisory\-update \- Update an existing advisory with a new event


.SH SYNOPSIS
.PP
\fBwolfictl advisory update [flags]\fP


.SH DESCRIPTION
.PP
Update an existing advisory with a new event.

.PP
Use this command to update an existing advisory by adding a new "event" to the
advisory, i.e. when the given package/vulnerability combination already exists
in the advisories repo. If the package/vulnerability combination doesn't yet
exist, use the "create" command instead.

.PP
This command will prompt for all required fields, and will attempt to fill in
as many optional fields as possible. You can abort the advisory update at any
point in the prompt by pressing Ctrl+C.

.PP
You can specify required values on the command line using the flags relevant to
the advisory event you are adding. If not all required values are provided on
the command line, the command will prompt for the missing values.

.PP
It's possible to update advisories for multiple packages and/or vulnerabilities
at once by using a comma\-separated list of package names and vulnerabilities.
This is available for both the CLI flags and the interactive prompt fields.

.PP
If the \-\-no\-prompt flag is specified, then the command will fail if any
required fields are missing.


.SH OPTIONS
.PP
\fB\-a\fP, \fB\-\-advisories\-repo\-dir\fP=""
    directory containing the advisories repository

.PP
\fB\-\-arch\fP=[x86\_64,aarch64]
    package architectures to find published versions for

.PP
\fB\-d\fP, \fB\-\-distro\-repo\-dir\fP=""
    directory containing the distro repository

.PP
\fB\-\-fixed\-version\fP=""
    package version where fix was applied (used only for 'fixed' event type)

.PP
\fB\-\-fp\-type\fP=""
    type of false positive [vulnerability\-record\-analysis\-contested, component\-vulnerability\-mismatch, vulnerable\-code\-version\-not\-used, vulnerable\-code\-not\-included\-in\-package, vulnerable\-code\-not\-in\-execution\-path, vulnerable\-code\-cannot\-be\-controlled\-by\-adversary, inline\-mitigations\-exist]

.PP
\fB\-h\fP, \fB\-\-help\fP[=false]
    help for update

.PP
\fB\-\-no\-distro\-detection\fP[=false]
    do not attempt to auto\-detect the distro

.PP
\fB\-\-no\-prompt\fP[=false]
    do not prompt the user for input

.PP
\fB\-\-note\fP=""
    prose explanation to attach to the event data (can be used with any event type)

.PP
\fB\-p\fP, \fB\-\-package\fP=[]
    package names

.PP
\fB\-r\fP, \fB\-\-package\-repo\-url\fP=""
    URL of the APK package repository

.PP
\fB\-\-timestamp\fP="now"
    timestamp of the event (RFC3339 format)

.PP
\fB\-t\fP, \fB\-\-type\fP=""
    type of event [detection, true\-positive\-determination, fixed, false\-positive\-determination, analysis\-not\-planned, fix\-not\-planned, pending\-upstream\-fix]

.PP
\fB\-V\fP, \fB\-\-vuln\fP=[]
    vulnerability IDs for advisory


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-\-log\-level\fP="WARN"
    log level (e.g. debug, info, warn, error)


.SH SEE ALSO
.PP
\fBwolfictl\-advisory(1)\fP
